{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { fetchUsersData } from \"../../redux/actions/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Comment(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      postId = _useState4[0],\n      setPostId = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  useEffect(function () {\n    function matchUserToComment(comments) {\n      var _loop = function _loop(i) {\n        if (comments[i].hasOwnProperty('users')) {\n          return \"continue\";\n        }\n\n        var user = props.users.find(function (x) {\n          return x.uid === comments[i].creator;\n        });\n\n        if (user == undefined) {\n          props.fetchUsersData(comments[i].creator, false);\n        } else {\n          comments[i].user = user;\n        }\n      };\n\n      for (var i = 0; i < comments.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === \"continue\") continue;\n      }\n\n      setComments(comments);\n    }\n\n    if (props.route.params.postId !== postId) {\n      firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').get().then(function (snapshot) {\n        var comments = snapshot.docs.map(function (doc) {\n          var data = doc.data();\n          var id = doc.id;\n          return _objectSpread({\n            id: id\n          }, data);\n        });\n        matchUserToComment(comments);\n      });\n      setPostId(props.route.params.postId);\n    } else {\n      matchUserToComment(comments);\n    }\n  }, [props.route.params.postId, props.users]);\n\n  var onCommentSend = function onCommentSend() {\n    firebase.firestore().collection('posts').doc(props.route.params.uid).collection('userPosts').doc(props.route.params.postId).collection('comments').add({\n      creator: firebase.auth().currentUser.uid,\n      text: text\n    });\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(FlatList, {\n      numColumns: 1,\n      horizontal: false,\n      data: comments,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          children: [item.user === undefined ? _jsx(Text, {\n            children: item.user.name\n          }) : null, _jsx(Text, {\n            children: item.text\n          })]\n        });\n      }\n    }), _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Add comment\",\n        onChangeText: function onChangeText(text) {\n          return setText(text);\n        }\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return onCommentSend();\n        },\n        title: \"Send\"\n      })]\n    })]\n  });\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    users: store.usersState.users\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return bindActionCreators({\n    fetchUsersData: fetchUsersData\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment);","map":{"version":3,"names":["React","useState","useEffect","firebase","require","connect","bindActionCreators","fetchUsersData","Comment","props","comments","setComments","postId","setPostId","text","setText","matchUserToComment","i","hasOwnProperty","user","users","find","x","uid","creator","undefined","length","route","params","firestore","collection","doc","get","then","snapshot","docs","map","data","id","onCommentSend","add","auth","currentUser","item","name","mapStateToProps","store","usersState","mapDispatchProps","dispatch"],"sources":["/Users/spring/Documents/GitHub/flash/components/main/Comment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, FlatList, Button, TextInput } from 'react-native'\n\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nrequire('firebase/firestore')\n\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport {fetchUsersData} from '../../redux/actions/index'\n\nfunction Comment(props) {\n    const [comments, setComments] = useState([])\n    const [postId, setPostId] = useState(\"\")\n    const [text, setText] = useState(\"\")\n\n    useEffect(() => {\n\n        function matchUserToComment(comments){\n            for(let i = 0; i < comments.length; i++)  {\n                if(comments[i].hasOwnProperty('users')) {\n                    continue;\n                }\n\n                const user = props.users.find(x => x.uid === comments[i].creator)\n                if(user == undefined) {\n                    props.fetchUsersData(comments[i].creator, false)\n                } else {\n                    comments[i].user = user\n                }\n            }\n            setComments(comments)\n        }\n        if(props.route.params.postId !== postId){\n            firebase.firestore()\n            .collection('posts')\n            .doc(props.route.params.uid)\n            .collection('userPosts')\n            .doc(props.route.params.postId)\n            .collection('comments')\n            .get()\n            .then((snapshot) => {\n                let comments = snapshot.docs.map(doc => {\n                    const data = doc.data();\n                    const id = doc.id;\n                    return {id, ...data}\n                })\n                matchUserToComment(comments)\n            })\n            setPostId(props.route.params.postId)\n        } else {\n            matchUserToComment(comments)\n        }\n    }, [props.route.params.postId, props.users])\n\nconst onCommentSend = () => {\n    firebase.firestore()\n    .collection('posts')\n    .doc(props.route.params.uid)\n    .collection('userPosts')\n    .doc(props.route.params.postId)\n    .collection('comments')\n    .add({\n        creator: firebase.auth().currentUser.uid,\n        text\n    })\n}\n    return (\n        <View>\n            <FlatList\n                numColumns={1}\n                horizontal={false}\n                data={comments}\n                renderItem={({item}) => (\n                    <View>\n                        {item.user === undefined ? \n                            <Text>\n                                {item.user.name}\n                            </Text>\n                        : null}\n                        <Text>{item.text}</Text>\n                    </View>\n                )}\n            />\n\n            <View>\n                <TextInput\n                placeholder='Add comment'\n                onChangeText={(text) => setText(text)}\n                />\n                <Button\n                    onPress={() => onCommentSend()}\n                    title=\"Send\"\n                />\n            </View>\n        </View>\n  )\n}\n\nconst mapStateToProps = (store) => ({\n    users: store.usersState.users\n})\nconst mapDispatchProps = (dispatch) => bindActionCreators({fetchUsersData}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchProps)(Comment)"],"mappings":"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"},"metadata":{},"sourceType":"module"}