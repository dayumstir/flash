{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nrequire('firebase/firestore');\n\nexport default function Search(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var fetchUsers = function fetchUsers(search) {\n    firebase.firestore().collection('users').where('name', '>=', search).get().then(function (snapshot) {\n      var users = snapshot.docs.map(function (doc) {\n        var data = doc.data();\n        var id = doc.id;\n        return _objectSpread({\n          id: id\n        }, data);\n      });\n      setUsers(users);\n    });\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"black\"\n    },\n    children: [_jsxs(TouchableOpacity, {\n      activeOpacity: 0.5,\n      style: styles.SearchButton,\n      children: [_jsx(Image, {\n        source: require(\"../../assets/search.png\"),\n        style: {\n          width: 20,\n          height: 30,\n          alignItems: 'flex-left'\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"  Search\",\n        style: {\n          color: 'black',\n          alignItems: 'flex-left'\n        },\n        onChangeText: function onChangeText(search) {\n          return fetchUsers(search);\n        }\n      })]\n    }), _jsx(FlatList, {\n      numColumns: 1,\n      horizontal: false,\n      data: users,\n      style: {\n        color: 'red'\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.navigate(\"Profile\", {\n              uid: item.id\n            });\n          },\n          children: _jsx(Text, {\n            children: item.name\n          })\n        });\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  SearchButton: {\n    flexDirection: 'row',\n    height: 50,\n    alignSelf: 'stretch',\n    backgroundColor: 'white',\n    borderRadius: 50,\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","firebase","require","Search","props","users","setUsers","fetchUsers","search","firestore","collection","where","get","then","snapshot","docs","map","doc","data","id","flex","backgroundColor","styles","SearchButton","width","height","alignItems","color","item","navigation","navigate","uid","name","StyleSheet","create","flexDirection","alignSelf","borderRadius","padding"],"sources":["/Users/spring/Documents/GitHub/flash/components/main/Search.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, TextInput, FlatList, TouchableOpacity, StyleSheet, Image } from 'react-native'\n\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\nrequire('firebase/firestore')\n\nexport default function Search(props) {\n    const [users, setUsers] = useState([])\n\n    const fetchUsers = (search) => {\n        firebase.firestore()\n        .collection('users')\n        .where('name', '>=', search)\n        .get()\n        .then((snapshot) => {\n            let users = snapshot.docs.map(doc => {\n                const data = doc.data();\n                const id = doc.id;\n                return { id, ...data }\n            });\n            setUsers(users);\n        })\n    }\n  return (\n    <View style={{ flex: 1, backgroundColor: \"black\" }}>\n        <TouchableOpacity activeOpacity={0.5} style={styles.SearchButton}>\n            <Image \n                source={require('../../assets/search.png')}\n                style={{ width: 20, height: 30, alignItems: 'flex-left' }}\n            />\n            <TextInput \n                placeholder=\"  Search\"\n                style={{color: 'black', alignItems: 'flex-left'}}\n                onChangeText={(search) => fetchUsers(search)}\n            />\n        </TouchableOpacity>\n        <FlatList\n            numColumns={1}\n            horizontal={false}\n            data={users}\n            style={{color: 'red'}}\n            renderItem={({ item }) => (\n                <TouchableOpacity\n                    onPress={() => props.navigation.navigate(\"Profile\", {uid: item.id})}>\n                    <Text>{item.name}</Text>\n                </TouchableOpacity>\n            )}\n        />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n    SearchButton: {\n      flexDirection: 'row', \n      height: 50, \n      alignSelf: 'stretch',\n      backgroundColor: 'white',\n      borderRadius: 50,\n      padding: 10,\n    },\n  })\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;AAGA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;;;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;EAClC,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAAY;IAC3BP,QAAQ,CAACQ,SAAT,GACCC,UADD,CACY,OADZ,EAECC,KAFD,CAEO,MAFP,EAEe,IAFf,EAEqBH,MAFrB,EAGCI,GAHD,GAICC,IAJD,CAIM,UAACC,QAAD,EAAc;MAChB,IAAIT,KAAK,GAAGS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkB,UAAAC,GAAG,EAAI;QACjC,IAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAb;QACA,IAAMC,EAAE,GAAGF,GAAG,CAACE,EAAf;QACA;UAASA,EAAE,EAAFA;QAAT,GAAgBD,IAAhB;MACH,CAJW,CAAZ;MAKAZ,QAAQ,CAACD,KAAD,CAAR;IACH,CAXD;EAYH,CAbD;;EAcF,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAAEe,IAAI,EAAE,CAAR;MAAWC,eAAe,EAAE;IAA5B,CAAb;IAAA,WACI,MAAC,gBAAD;MAAkB,aAAa,EAAE,GAAjC;MAAsC,KAAK,EAAEC,MAAM,CAACC,YAApD;MAAA,WACI,KAAC,KAAD;QACI,MAAM,EAAErB,OAAO,2BADnB;QAEI,KAAK,EAAE;UAAEsB,KAAK,EAAE,EAAT;UAAaC,MAAM,EAAE,EAArB;UAAyBC,UAAU,EAAE;QAArC;MAFX,EADJ,EAKI,KAAC,SAAD;QACI,WAAW,EAAC,UADhB;QAEI,KAAK,EAAE;UAACC,KAAK,EAAE,OAAR;UAAiBD,UAAU,EAAE;QAA7B,CAFX;QAGI,YAAY,EAAE,sBAAClB,MAAD;UAAA,OAAYD,UAAU,CAACC,MAAD,CAAtB;QAAA;MAHlB,EALJ;IAAA,EADJ,EAYI,KAAC,QAAD;MACI,UAAU,EAAE,CADhB;MAEI,UAAU,EAAE,KAFhB;MAGI,IAAI,EAAEH,KAHV;MAII,KAAK,EAAE;QAACsB,KAAK,EAAE;MAAR,CAJX;MAKI,UAAU,EAAE;QAAA,IAAGC,IAAH,QAAGA,IAAH;QAAA,OACR,KAAC,gBAAD;UACI,OAAO,EAAE;YAAA,OAAMxB,KAAK,CAACyB,UAAN,CAAiBC,QAAjB,CAA0B,SAA1B,EAAqC;cAACC,GAAG,EAAEH,IAAI,CAACT;YAAX,CAArC,CAAN;UAAA,CADb;UAAA,UAEI,KAAC,IAAD;YAAA,UAAOS,IAAI,CAACI;UAAZ;QAFJ,EADQ;MAAA;IALhB,EAZJ;EAAA,EADF;AA2BD;AAED,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAC7BX,YAAY,EAAE;IACZY,aAAa,EAAE,KADH;IAEZV,MAAM,EAAE,EAFI;IAGZW,SAAS,EAAE,SAHC;IAIZf,eAAe,EAAE,OAJL;IAKZgB,YAAY,EAAE,EALF;IAMZC,OAAO,EAAE;EANG;AADe,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}