{"ast":null,"code":"import { USER_STATE_CHANGE } from \"../constants/index\";\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nexport function fetchUser() {\n  return function (dispatch) {\n    firebase.firestore().collection(\"user\").doc(firebase.auth().currentUser.uid).get().then(function (snapshot) {\n      if (snapshot.exists) {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: snapshot.data()\n        });\n      } else {\n        console.log('does not exist');\n      }\n    });\n  };\n}","map":{"version":3,"names":["USER_STATE_CHANGE","firebase","fetchUser","dispatch","firestore","collection","doc","auth","currentUser","uid","get","then","snapshot","exists","type","data","console","log"],"sources":["/Users/dempster/Documents/GitHub/flash/redux/actions/index.js"],"sourcesContent":["import { USER_STATE_CHANGE } from '../constants/index'\n\nimport firebase from 'firebase/compat/app'\nimport 'firebase/compat/auth'\nimport 'firebase/compat/firestore'\n\nexport function fetchUser() {\n    return((dispatch) => {\n        firebase.firestore()\n            .collection(\"user\")\n            .doc(firebase.auth().currentUser.uid)\n            .get()\n            .then((snapshot) => {\n                if (snapshot.exists) {\n                    dispatch({type: USER_STATE_CHANGE, currentUser: snapshot.data()})\n                } else {\n                    console.log('does not exist')\n                }\n            })\n    })\n}"],"mappings":"AAAA,SAASA,iBAAT;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AAEA,OAAO,SAASC,SAAT,GAAqB;EACxB,OAAO,UAACC,QAAD,EAAc;IACjBF,QAAQ,CAACG,SAAT,GACKC,UADL,CACgB,MADhB,EAEKC,GAFL,CAESL,QAAQ,CAACM,IAAT,GAAgBC,WAAhB,CAA4BC,GAFrC,EAGKC,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;MAChB,IAAIA,QAAQ,CAACC,MAAb,EAAqB;QACjBV,QAAQ,CAAC;UAACW,IAAI,EAAEd,iBAAP;UAA0BQ,WAAW,EAAEI,QAAQ,CAACG,IAAT;QAAvC,CAAD,CAAR;MACH,CAFD,MAEO;QACHC,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACH;IACJ,CAVL;EAWH,CAZD;AAaH"},"metadata":{},"sourceType":"module"}